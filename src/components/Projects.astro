---
import GitHub from "../icons/GitHub.astro";
import Tailwind from "../icons/Tailwind.astro";
import Link from "../icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import MySQL from "../icons/MySQL.astro";
import Angular from "../icons/Angular.astro";
import ReactJS from "../icons/ReactJS.astro";
import MongoDB from "../icons/MongoDB.astro";
import NodeJS from "../icons/NodeJS.astro";
import Express from "../icons/Express.astro";
import Expo from "../icons/Expo.astro";

const TAGS = {
 ANGULAR: {
  name: "Angular",
  class: "bg-[#8B11F0] text-white ",
  icon: Angular,
 },
 TAILWIND: {
  name: "Tailwind CSS",
  class: "bg-[#003159] text-white",
  icon: Tailwind,
 },
 MYSQL: {
  name: "MySQL",
  class: "bg-[#003159] text-white",
  icon: MySQL,
 },
 REACT: {
  name: "ReactJS",
  class: "bg-[#003159] text-white",
  icon: ReactJS,
 },
 REACTNATIVE: {
  name: "React Native",
  class: "bg-[#003159] text-white",
  icon: ReactJS,
 },
 MONGO: {
  name: "MongoDB",
  class: "bg-[#003159] text-white",
  icon: MongoDB,
 },
 NODEJS: {
  name: "NodeJS",
  class: "bg-[#003159] text-white",
  icon: NodeJS,
 },
 EXPRESSJS: {
  name: "Express",
  class: "bg-[#003159] text-white",
  icon: Express,
 },
 EXPO: {
  name: "Expo",
  class: "bg-[#003159] text-white",
  icon: Expo,
 },
};
const PROJECTS = [
 {
  title: "Panel de control",
  description:
   "This project is a web application built with Angular, designed to manage the registration and tracking of students, courses, and enrollments for an institution. It leverages technologies such as Angular Material for an intuitive user interface, NgRx for efficient state management, and focuses on delivering a seamless and scalable experience.",
  link: "https://ubiquitous-rugelach-95d3e7.netlify.app",
  github: "https://github.com/brunogperez/pfangular-perez-59435",
  image: "/projects/ControlPanelAngular.webp",
  tags: [TAGS.ANGULAR],
 },
 {
  title: "MartinezWineryDB - Base de datos SQL",
  description:
   "The purpose of this project is to demonstrate the application of SQL for managing and analyzing data for a wine distribution company. Throughout this project, various SQL functionalities and features will be explored, including database creation and manipulation, execution of complex queries, data integration from multiple sources, and the implementation of best practices in database design.",
  github: "https://github.com/brunogperez/dbMartinezWinery",
  image: "/projects/Diagrama ER MartinezWinery.webp",
  tags: [TAGS.MYSQL],
 },
 {
  title: "Digital Age  - React Native App",
  description:
   "App mobile realizada con React Native y Expo sobre un e-commerce de una empresa de tecnología. En la misma se trabajó con Redux y bases de datos SQLite para el eficiente manejo de datos.",
  github: "https://github.com/brunogperez/PF_ReactNative_PerezBruno",
  image: "/projects/digitalAGEmobile.webp",
  tags: [TAGS.EXPO, TAGS.REACTNATIVE],
 },
 {
  title: "Digital Age - E-commerce (Backend)",
  description:
   "API backend diseñada con Node.js, Express y MongoDB para gestionar datos de manera eficiente. Incluye endpoints RESTful, autenticación de usuarios, validación de datos y operaciones CRUD.",
  link: "https://pf-backend-perez.onrender.com/",
  github: "https://github.com/brunogperez/PF_Backend_Perez",
  image: "/projects/API documentacion.webp",
  tags: [TAGS.MONGO, TAGS.NODEJS, TAGS.EXPRESSJS],
 },
 {
  title: "Digital Age - E-commerce",
  description:
   "An e-commerce website built with React, Material-UI (MUI), Redux, and the MercadoPago payment gateway to provide a modern, seamless, and secure user experience. The project includes a product catalog, shopping cart, dynamic filters, user authentication, and a complete purchase flow integrated with reliable payment options. The implementation of Redux ensures efficient global state management, facilitating scalability and system maintenance.",
  link: "https://pf-backend-front-perezbruno.netlify.app",
  github: "https://github.com/brunogperez/PF_Frontend_Perez",
  image: "/projects/digitalAGE.webp",
  tags: [TAGS.REACT],
 },
];
---

<div class="flex flex-col gap-y-16">
 {
  PROJECTS.map(({ image, title, description, tags, link, github }) => (
   <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
    <div class="w-full md:w-1/2">
     <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img
       alt={title} 
       class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
       loading="lazy"
       src={image}
      />
     </div>
    </div>

    <div class="w-full md:w-1/2 md:max-w-lg">
     <h3 class="text-xl font-bold text-gray-800 dark:text-gray-100 md:text-3xl">
      {title}
     </h3>
     <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
       {tags.map((tag) => (
        <li>
         <span
          class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
         >
          <tag.icon class="size-4" />
          {tag.name}
         </span>
        </li>
       ))}
      </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400 text-sm md:text-xl">
       {description}
      </div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
       {github && (
        <LinkButton href={github}>
         <GitHub class="size-6" />
         Code
        </LinkButton>
       )}
       {link && (
        <LinkButton href={link}>
         <Link class="size-4" />
         Preview
        </LinkButton>
       )}
      </footer>
     </div>
    </div>
   </article>
  ))
 }
</div>
